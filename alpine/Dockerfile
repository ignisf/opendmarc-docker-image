# AUTOMATICALLY GENERATED
# DO NOT EDIT THIS FILE DIRECTLY, USE /Dockerfile.tmpl.php

# https://hub.docker.com/_/alpine
FROM alpine:3.6

MAINTAINER Instrumentisto Team <developer@instrumentisto.com>


# Build and install OpenDMARC
RUN apk update \
 && apk upgrade \
 && apk add --no-cache \
        ca-certificates \
 && update-ca-certificates \

 # Install OpenDMARC dependencies
 && apk add --no-cache \
        libmilter \

 # Install tools for building
 && apk add --no-cache --virtual .tool-deps \
        curl coreutils autoconf g++ libtool make \

 # Install OpenDMARC build dependencies
 && apk add --no-cache --virtual .build-deps \
        libmilter-dev \

 # Download and prepare OpenDMARC sources
 && curl -fL -o /tmp/opendmarc.tar.gz \
         https://downloads.sourceforge.net/project/opendmarc/opendmarc-1.3.2.tar.gz \
 && (echo "6045fb7d2be8f0ffdeca07324857d92908a41c6792749017c2fcc1058f05f55317b1919c67c780827dd7094ec8fff2e1fa4aeb5bab7ff7461537957af2652748  /tmp/opendmarc.tar.gz" \
         | sha512sum -c -) \
 && tar -xzf /tmp/opendmarc.tar.gz -C /tmp/ \
 && cd /tmp/opendmarc-* \
 # Patch NETDB_* musl libc problem.
 # Details: https://github.com/instrumentisto/docker-mailserver/issues/4
 && sed -i '1s;^;#if !defined(NETDB_INTERNAL)\n#  define NETDB_INTERNAL (-1)\n#endif\n#if !defined(NETDB_SUCCESS)\n#  define NETDB_SUCCESS (0)\n#endif\n\n;' \
        libopendmarc/opendmarc_internal.h \

 # Build OpenDMARC from sources
 && ./configure \
        --prefix=/usr \
        --sysconfdir=/etc/opendmarc \
        # No documentation included to keep image size smaller
        --docdir=/tmp/opendmarc/doc \
        --infodir=/tmp/opendmarc/info \
        --mandir=/tmp/opendmarc/man \
 && make \

 # Create OpenDMARC user and group
 && addgroup -S -g 91 opendmarc \
 && adduser -S -u 90 -D -s /sbin/nologin \
            -H -h /run/opendmarc \
            -G opendmarc -g opendmarc \
            opendmarc \
 && addgroup opendmarc mail \

 # Install OpenDMARC
 && make install \
 # Prepare run directory
 && install -d -o opendmarc -g opendmarc /run/opendmarc/ \
 # Preserve licenses
 && install -d /usr/share/licenses/opendmarc/ \
 && mv /tmp/opendmarc/doc/LICENSE* \
       /usr/share/licenses/opendmarc/ \
 # Prepare configuration directories
 && install -d /etc/opendmarc/conf.d/ \

 # Cleanup unnecessary stuff
 && apk del .tool-deps .build-deps \
 && rm -rf /var/cache/apk/* \
           /tmp/*


# Install s6-overlay
RUN apk add --update --no-cache --virtual .tool-deps \
        curl \
 && curl -fL -o /tmp/s6-overlay.tar.gz \
         https://github.com/just-containers/s6-overlay/releases/download/v1.20.0.0/s6-overlay-amd64.tar.gz \
 && tar -xzf /tmp/s6-overlay.tar.gz -C / \

 # Cleanup unnecessary stuff
 && apk del .tool-deps \
 && rm -rf /var/cache/apk/* \
           /tmp/*

ENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \
    S6_CMD_WAIT_FOR_SERVICES=1


COPY rootfs /

RUN chmod +x /etc/services.d/*/run


EXPOSE 8893

ENTRYPOINT ["/init"]

CMD ["opendmarc", "-f"]
